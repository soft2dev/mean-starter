/* Common utilities */
// Remove arrow from select in IE
select::-ms-expand {
    display: none;
}

// Shadow
.is-shadowed {
	box-shadow: 0px 0px 0px 0px rgba(0,0,0,0.01), 0 5px 32px 10px rgba(0,0,0,0.05);
}

// overflow
.overflow-visible {
	overflow: visible !important;
}

// Full width image
.img-full {
	width: 100%;
}

.img-xs-full {
	@include media("<=sm") {
		width: 100%;
	}
}

// Cover image
[data-cover-image="true"],
.has-cover {
	@include media("<=sm") {
		background-image: none !important;
	}

	@include media(">sm") {
		@include make-bkg-image(no-repeat, center center, cover);
	}
}

// Is parallaxed
.is-parallaxed {
	.no-touch & {
		background-attachment: fixed;
	}
}

// mask overlay
.mask-overlay {
	&::before {
		@include make-pseudo-position(absolute, full) {
			// z-index: $zindex-normal;
			background-color: transparentize(darken($brand-black, 100%), 0.75);
			transition: all ease-in-out 0.35s;
		};
	}
}

.hide-xs-mask-overlay {
	&::before {
		@include media("<=sm") {
			display: none !important;
		}
	}
}

// overlay cover
.overlay-cover {
	@include make-full-position(absolute);
	z-index: $zindex-low;

	// image
	&__img {
		@include make-full-position(absolute);
	}
}

// Animate image :: kenBurns
@keyframes kenBurns {
	0% {transform: scale(1); }
	100% {transform: scale(1.1); }
}

.zoom-effect-holder {
	@extend .overflow-hidden !optional;
}

.zoom-effect {
	animation: kenBurns 12s ease alternate infinite; //~ 15s
	-webkit-animation: kenBurns 12s ease alternate infinite; //~ 15s
}

/* Link overlay style */
.link-stacked {
	&::before {
		@include make-full-position(absolute);
		z-index: $zindex-normal;
	}
}

/* Web page customized selection feature */
@include selection($secondary, $brand-white);

// Off css transition if window is resizing
.resize-active {
	* {
		transition: none !important;
	}
}

// Enable debuggin mode in development environment
// @include debug();

// == Is floated element
.is-floated {
	position: absolute !important;
	left: 0;
	right: 0;

	&.center {
		top: 50%;
		left: 50%;
		// right: auto;
		transform: translateX(-50%) translateY(-50%);
	}

	&.right {
		right: 0;
		left: auto;
	}

	&.bottom {
		bottom: 1.25rem;
	}

	&.left-bottom {
		left: 0;
		bottom: 0;
		right: auto;
	}

	&.right-bottom {
		right: 0;
		bottom: 0;
		left: auto;
	}

	&.center-bottom {
		bottom: 0;		
		left: 50%;
		transform: translateX(-50%);
	}
}

.is-sm-floated {
	@include media(">sm") {
		position: absolute !important;
		left: 0;
		right: 0;
	}
}